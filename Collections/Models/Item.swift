import FirebaseFirestore

struct Item {
    var documentID: String
    var name: String
    var extraText: String
    var photoURL: URL
    var collectionID: String!
}

// MARK: - Firestore interoperability

extension Item: DocumentSerializable {
    
    /// Initializes an Item with a documentID auto-generated by Firestore.
    init(
        name: String,
        extraText: String,
        photoURL: URL) {
        let document = Firestore.firestore().collectionItems.document()
        self.init(documentID: document.documentID,
                  name: name,
                  extraText: extraText,
                  photoURL: photoURL)
    }
    
    /// Initializes an item from a documentID and some data, ostensibly from Firestore.
    private init?(documentID: String, dictionary: [String: Any]) {
        guard
            let name = dictionary["name"] as? String,
            let extraText = dictionary["extraText"] as? String,
            let photoURLString = dictionary["photoURL"] as? String else { return nil }
        
        guard let photoURL = URL(string: photoURLString) else { return nil }
        
        self.init(documentID: documentID,
                  name: name,
                  extraText: extraText,
                  photoURL: photoURL)
    }
    
    init?(document: QueryDocumentSnapshot) {
        self.init(documentID: document.documentID, dictionary: document.data())
    }
    
    init?(document: DocumentSnapshot) {
        guard let data = document.data() else { return nil }
        self.init(documentID: document.documentID, dictionary: data)
    }
    
    /// The dictionary representation of the restaurant for uploading to Firestore.
    var documentData: [String: Any] {
        return [
            "name": name,
            "extraText": extraText,
            "photoURL": photoURL.absoluteString]
        
    }
    
}

// MARK: - Data generation

/// A wrapper of arc4random_uniform, to avoid lots of casting.
func RandomUniform2(_ upperBound: Int) -> Int {
    return Int(arc4random_uniform(UInt32(upperBound)))
}

extension Item {
    
    static func randomPhotoURL() -> URL {
        let number = RandomUniform2(22) + 1
        let URLString =
        "https://storage.googleapis.com/firestorequickstarts.appspot.com/item_\(number).png"
        return URL(string: URLString)!
    }
    
}
